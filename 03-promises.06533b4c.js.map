{"mappings":"YAoBA,SAASA,EAAcC,EAAUC,GAE/B,OADAC,QAAQC,IAAIH,EAAUC,GACf,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,S,GAEpBA,E,IA9BQS,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAAC,GAChCA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SAASH,EAAEI,QAChCf,QAAQC,IAAIY,GACZ,IAAMG,EAAaC,SAASJ,EAASK,IAAI,UACnCC,EAAOF,SAASJ,EAASK,IAAI,SAC7BE,EAASH,SAASJ,EAASK,IAAI,WACrClB,QAAQC,IAAIe,EAAYG,EAAMC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IAC1BxB,EAAcwB,EAAI,EAAGL,EAAaK,EAAIF,GAAQG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAC9DC,QAAQC,IAAI,uBAAwCuB,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE3D0B,OAAM,SAAAF,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBC,QAAQC,IAAI,sBAAuCuB,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,OAmB/DF,IAEAA,EAAc,EAAG,MACdyB,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBC,QAAQC,IAAI,uBAAwCuB,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE3D0B,OAAM,SAAAF,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBC,QAAQC,IAAI,sBAAqCuB,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  console.log(formData);\n  const firstDelay = parseInt(formData.get('delay'));\n  const step = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n  console.log(firstDelay, step, amount);\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, firstDelay + i * step)  .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });;\n  }\n});\n\nfunction createPromise(position, delay) {\n  console.log(position, delay);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise();\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","console","log","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","formData","FormData","target","firstDelay","parseInt","get","step","amount","i","then","param","concat","catch"],"version":3,"file":"03-promises.06533b4c.js.map"}